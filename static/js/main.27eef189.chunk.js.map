{"version":3,"sources":["Components/BMI/bmi.js","Components/Navbar/navbar.js","Components/Calculator/DigitButton.js","Components/Calculator/OperandButton.js","Components/Calculator/calculator.js","Components/Counter/counter.js","Components/JokeGenerator/joke.js","Components/CurrencyConverter/currencyList.js","Components/CurrencyConverter/currencyConverter.js","App.js","index.js"],"names":["BMI","_useState","useState","_useState2","Object","slicedToArray","som","setSOM","_useState3","_useState4","weightLBS","setWeightLBS","_useState5","_useState6","heightFT","setHeightFT","_useState7","_useState8","heightINC","setHeightINC","_useState9","_useState10","weightKG","setWeightKG","_useState11","_useState12","heightCM","setHeightCM","_useState13","_useState14","bmi","setBmi","_useState15","_useState16","health","setHealth","_useState17","_useState18","message","setMessage","_useState19","_useState20","errorMessage","setErrorMessage","setAllHeight","inches","Math","floor","toFixed","setAllWeight","react_default","a","createElement","className","onClick","Fragment","type","placeholder","value","required","step","min","max","onChange","e","target","event","preventDefault","Navbar","_ref","setTool","menu","menuBar","setMenuBar","tools","useRef","toggleMenu","current","classList","toggle","index_esm","ref","DigitButton","dispatch","digit","ACTION","ADD_DIGIT","payload","OperandButton","operator","OPERATOR","CLEAR","DELETE","EQUALS","reducer","state","canOverwrite","objectSpread","currentOperand","includes","concat","preOperand","evaulate","slice","INTEGER_FORMATTER","Intl","NumberFormat","maximumFractionDigits","_ref2","preNum","parseFloat","currentNum","isNaN","equvalent","numberFormatter","operand","_operand$toString$spl","toString","split","_operand$toString$spl2","integer","decimal","format","Calculator","_useReducer","useReducer","_useReducer2","_useReducer2$","Calculator_OperandButton","Calculator_DigitButton","INCREMENT","DECREMENT","RESET","ADD_COUNT","SUB_COUNT","count","action","amount","Counter","addAmount","setAddAmount","subAmount","setSubAmount","error","setError","sendDispatchNoError","console","log","parseInt","Joke","dadJoke","setDadJoke","geekJoke","setGeekJoke","Array","length","fill","getDadJoke","asyncToGenerator","_regeneratorRuntime","mark","_callee","config","response","wrap","_context","prev","next","headers","Accept","axios","get","sent","data","joke","stop","apply","this","arguments","request","method","url","params","X-RapidAPI-Key","X-RapidAPI-Host","then","catch","CurrencyList","AED","currency_name","currency_code","decimal_units","countries","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYN","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRU","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","USN","UYI","UYU","UYW","UZS","VES","VND","VUV","WST","XAF","XAG","XAU","XBA","XBB","XBC","XBD","XCD","XDR","XOF","XPD","XPF","XPT","XSU","XTS","XUA","XXX","YER","ZAR","ZMW","ZWL","freeze","CurrencyConverter","convFrom","setConvFrom","convTo","setConvTo","setAmount","toAmount","setToAmount","fromAmount","setFromAmount","isFrom","setisFrom","isFromBtn","setisFromBtn","currencyList","toConsumableArray","keys","useEffect","convert","from","to","options","have","want","new_amount","map","option","key","index_es","icon","faRightLeft","App","setMenu","Navbar_navbar","tool","Calculator_calculator","Components_BMI_bmi","Counter_counter","JokeGenerator_joke","CurrencyConverter_currencyConverter","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.27eef189.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./bmi.css\";\n\nfunction BMI() {\n  // state\n  const [som, setSOM] = useState(1);\n  const [weightLBS, setWeightLBS] = useState(0);\n  const [heightFT, setHeightFT] = useState(0);\n  const [heightINC, setHeightINC] = useState(0);\n  const [weightKG, setWeightKG] = useState(0);\n  const [heightCM, setHeightCM] = useState(0);\n  const [bmi, setBmi] = useState(0);\n  const [health, setHealth] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const calcBmi = (event) => {\n    //prevent submitting\n    event.preventDefault();\n\n    if (weightKG === 0.0 || heightCM === 0.0) {\n      setErrorMessage(\"The value cannot be 0\");\n    } else if (\n      !(\n        (weightKG >= 30.0 && weightKG <= 300.0) ||\n        (weightLBS >= 66.15 && weightLBS <= 551.25)\n      )\n    ) {\n      setErrorMessage(\n        \" Weigth should be between 30kg - 300kg or 66.15lbs - 551.25lbs\"\n      );\n    } else if (\n      !(\n        (heightCM >= 91 && heightCM <= 271.78) ||\n        (heightFT >= 3 && heightFT <= 8)\n      )\n    ) {\n      setErrorMessage(\"Height should be between 91cm - 271.78cm or 3ft - 8ft\");\n    } else {\n      setErrorMessage(\"\");\n      setAllHeight(1);\n      setAllWeight(1);\n      let bmi = (weightKG / (heightCM * heightCM)) * 10000;\n      setBmi(bmi.toFixed(1));\n\n      if (bmi < 19) {\n        setHealth(\"UnderWeight\");\n        setMessage(\n          \"Your weight is less than it ideally should be. See your doctor or health professional and discuss whether you may need to aim at gaining weight. They can help you think of small, practical changes you feel comfortable with to achieve a healthy weight.\"\n        );\n      } else if (bmi >= 19 && bmi < 25) {\n        setHealth(\"Healthy\");\n        setMessage(\n          \"Your BMI is currently within what is considered a healthy weight range. Being a healthy weight has important benefits as it can help reduce your risk of heart disease, diabetes and a range of other conditions.\"\n        );\n      } else if (bmi >= 25 && bmi < 30) {\n        setHealth(\"Overweight\");\n        setMessage(\n          \"Your weight appears to be a bit above the ideal range. You might like to talk to your doctor about whether you need to set yourself a new target for a healthy weight. If you are at all concerned or have any health problems, check with your doctor before you start any new exercise programs or eating plans.\"\n        );\n      } else {\n        setHealth(\"Obese\");\n        setMessage(\n          \"You currently weigh more than is ideal. This puts your health at risk and is of increasing concern, particularly as you get older. Talk to your doctor about your BMI and discuss an appropriate and healthy weight for you.\"\n        );\n      }\n    }\n  };\n\n  let reload = () => {\n    setHeightCM(0);\n    setHeightFT(0);\n    setHeightINC(0);\n    setWeightKG(0);\n    setWeightLBS(0);\n    setBmi(0);\n    setMessage(\"\");\n    setErrorMessage(\"\");\n    setHealth(\"\");\n  };\n\n  const setAllHeight = (som) => {\n    if (som === 2) {\n      const inches = heightCM / 2.54;\n      setHeightFT(Math.floor(inches / 12));\n      setHeightINC((inches % 12).toFixed(2));\n    } else {\n      setHeightCM((heightFT * 30.48 + heightINC * 2.54).toFixed(0));\n    }\n  };\n\n  const setAllWeight = (som) => {\n    if (som === 2) {\n      setWeightLBS((weightKG / 0.45359237).toFixed(2));\n    } else {\n      setWeightKG((weightLBS * 0.45359237).toFixed(2));\n    }\n  };\n\n  return (\n    <div className=\"bmi\">\n      <div className=\"container\">\n        <div className=\"som\">\n          <button\n            onClick={() => {\n              setSOM(1);\n              setAllHeight(1);\n              setAllWeight(1);\n            }}\n            className={som === 1 ? \"active\" : \"\"}\n          >\n            Metric\n          </button>\n          <button\n            onClick={() => {\n              setSOM(2);\n              setAllHeight(2);\n              setAllWeight(2);\n            }}\n            className={som === 2 ? \"active\" : \"\"}\n          >\n            Imperial\n          </button>\n        </div>\n        <form>\n          <div>\n            <label>Weight</label>\n            <div className=\"inputBar\">\n              {som === 1 ? (\n                <>\n                  <input\n                    type=\"number\"\n                    placeholder=\"0\"\n                    value={weightKG}\n                    required\n                    step=\"any\"\n                    min=\"30\"\n                    max=\"300\"\n                    onChange={(e) => {\n                      setWeightKG(e.target.value);\n                    }}\n                  />\n                  <span>kg</span>\n                </>\n              ) : (\n                <>\n                  <input\n                    type=\"number\"\n                    placeholder=\"0\"\n                    value={weightLBS}\n                    required\n                    step=\"any\"\n                    min=\"66.15\"\n                    max=\"661.39\"\n                    onChange={(e) => {\n                      setWeightLBS(e.target.value);\n                    }}\n                  />\n                  <span>lbs</span>\n                </>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label>Height</label>\n\n            {som === 1 ? (\n              <div className=\"inputBar\">\n                <input\n                  type=\"number\"\n                  placeholder=\"0\"\n                  value={heightCM}\n                  required\n                  step=\"any\"\n                  min=\"91\"\n                  max=\"271.78\"\n                  onChange={(event) => {\n                    setHeightCM(event.target.value);\n                  }}\n                />\n                <span>cm</span>\n              </div>\n            ) : (\n              <>\n                <div className=\"inputBar\">\n                  <input\n                    type=\"number\"\n                    placeholder=\"0\"\n                    value={heightFT}\n                    required\n                    step=\"any\"\n                    min=\"3\"\n                    max=\"8\"\n                    onChange={(event) => {\n                      setHeightFT(event.target.value);\n                    }}\n                  />\n                  <span>ft</span>\n                </div>\n                <div className=\"inputBar\">\n                  <input\n                    type=\"number\"\n                    placeholder=\"0\"\n                    required\n                    step=\"any\"\n                    min=\"0\"\n                    max=\"11\"\n                    value={heightINC}\n                    onChange={(event) => {\n                      setHeightINC(event.target.value);\n                    }}\n                  />\n                  <span>in</span>\n                </div>\n              </>\n            )}\n          </div>\n          <div className=\"action\">\n            <button type=\"submit\" onClick={calcBmi}>\n              Submit\n            </button>\n            <button onClick={reload}>Reset</button>\n          </div>\n        </form>\n      </div>\n      {errorMessage ? (\n        <div className=\"messageBox error\">\n          <h2 className=\"errorMessage\">{errorMessage}</h2>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      {bmi ? (\n        <div className=\"messageBox\">\n          <h2>Your BMI Result</h2>\n          <div>\n            <div>\n              <h3>{health}</h3>\n              <p>{message}</p>\n            </div>\n            <h3 className=\"bmiResult\">{bmi}</h3>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default BMI;\n","import React, { useRef, useState } from \"react\";\nimport * as FaIcons from \"react-icons/fa\";\nimport \"./navbar.css\";\n\nfunction Navbar({ setTool, menu }) {\n  const [menuBar, setMenuBar] = useState(false);\n  const tools = useRef();\n  const toggleMenu = () => {\n    setMenuBar(!menuBar);\n    tools.current.classList.toggle(\"openBar\");\n  };\n\n  return (\n    <div className=\"navBar\">\n      <div className=\"header\">\n        <i className=\"navIcon\" onClick={() => toggleMenu()}>\n          {menuBar ? <FaIcons.FaTimes /> : <FaIcons.FaBars />}\n        </i>\n        <h1>\n          <span>U</span>\n          .Tool\n        </h1>\n      </div>\n      <div ref={tools} className=\"tools\">\n        <button\n          className={menu === 1 ? \"active\" : \"\"}\n          onClick={() => {\n            setTool(1);\n            toggleMenu();\n          }}\n        >\n          Calculator\n        </button>\n        <button\n          className={menu === 2 ? \"active\" : \"\"}\n          onClick={() => {\n            setTool(2);\n            toggleMenu();\n          }}\n        >\n          BMI Calculator\n        </button>\n        <button\n          className={menu === 3 ? \"active\" : \"\"}\n          onClick={() => {\n            setTool(3);\n            toggleMenu();\n          }}\n        >\n          Counter\n        </button>\n        <button\n          className={menu === 4 ? \"active\" : \"\"}\n          onClick={() => {\n            setTool(4);\n            toggleMenu();\n          }}\n        >\n          Joke Generator\n        </button>\n        <button\n          className={menu === 5 ? \"active\" : \"\"}\n          onClick={() => {\n            setTool(5);\n            toggleMenu();\n          }}\n        >\n          Currency Converter\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import { ACTION } from \"./calculator\";\nimport React from \"react\";\nfunction DigitButton({ dispatch, digit }) {\n  return (\n    <button\n      onClick={() => {\n        dispatch({ type: ACTION.ADD_DIGIT, payload: { digit } });\n      }}\n    >\n      {digit}\n    </button>\n  );\n}\n\nexport default DigitButton;\n","import { ACTION } from \"./calculator\";\nimport React from \"react\";\nfunction OperandButton({ dispatch, operator }) {\n  return (\n    <button\n      onClick={() => {\n        dispatch({ type: ACTION.OPERATOR, payload: { operator } });\n      }}\n    >\n      {operator}\n    </button>\n  );\n}\n\nexport default OperandButton;\n","import React, { useReducer } from \"react\";\nimport DigitButton from \"./DigitButton\";\nimport OperandButton from \"./OperandButton\";\nimport \"./calculator.css\";\n\nexport const ACTION = {\n  CLEAR: \"clear\",\n  ADD_DIGIT: \"add_digit\",\n  DELETE: \"delete\",\n  OPERATOR: \"operator\",\n  EQUALS: \"equals\",\n};\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case ACTION.ADD_DIGIT:\n      if (state.canOverwrite) {\n        return {\n          ...state,\n          currentOperand: payload.digit,\n          canOverwrite: false,\n        };\n      }\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") {\n        return state;\n      } else if (payload.digit === \".\" && state.currentOperand == null) {\n        return {\n          ...state,\n          currentOperand: \"0.\",\n        };\n      } else if (payload.digit === \".\" && state.currentOperand.includes(\".\")) {\n        return state;\n      }\n      return {\n        ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`,\n      };\n    case ACTION.OPERATOR:\n      if (state.currentOperand == null && state.preOperand == null) {\n        return state;\n      }\n      if (state.preOperand == null) {\n        return {\n          ...state,\n          operator: payload.operator,\n          preOperand: state.currentOperand,\n          currentOperand: null,\n        };\n      }\n      if (state.currentOperand == null) {\n        return {\n          ...state,\n          operator: payload.operator,\n        };\n      }\n      return {\n        ...state,\n        preOperand: evaulate(state),\n        operator: payload.operator,\n        currentOperand: null,\n      };\n    case ACTION.CLEAR:\n      return {};\n    case ACTION.DELETE:\n      if (state.canOverwrite) {\n        return {\n          ...state,\n          canOverwrite: false,\n          currentOperand: null,\n        };\n      }\n      if (state.currentOperand == null) {\n        return state;\n      }\n\n      return {\n        currentOperand: state.currentOperand.slice(0, -1),\n      };\n    case ACTION.EQUALS:\n      if (\n        (state.operator !== null && state.currentOperand !== null) ||\n        state.preOperand !== null\n      ) {\n        return {\n          ...state,\n          currentOperand: evaulate(state),\n          preOperand: null,\n          operator: null,\n          canOverwrite: true,\n        };\n      }\n      return state;\n    default:\n      return state;\n  }\n}\n\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n  maximumFractionDigits: 0,\n});\n\nfunction evaulate({ currentOperand, preOperand, operator }) {\n  const preNum = parseFloat(preOperand);\n  const currentNum = parseFloat(currentOperand);\n  if (isNaN(preNum) || isNaN(currentNum)) {\n    return \"\";\n  }\n  let equvalent = \"\";\n  switch (operator) {\n    case \"+\":\n      equvalent = preNum + currentNum;\n      break;\n    case \"-\":\n      equvalent = preNum - currentNum;\n      break;\n    case \"/\":\n      equvalent = preNum / currentNum;\n      break;\n    case \"*\":\n      equvalent = preNum * currentNum;\n      break;\n    default:\n      equvalent = \"\";\n  }\n  return equvalent;\n}\n\nfunction numberFormatter(operand) {\n  if (operand == null) {\n    return;\n  }\n  const [integer, decimal] = operand.toString().split(\".\");\n  if (decimal == null) {\n    return INTEGER_FORMATTER.format(integer);\n  }\n  return `${INTEGER_FORMATTER.format(integer)}.${decimal}`;\n}\n\nfunction Calculator() {\n  const [{ currentOperand, preOperand, operator }, dispatch] = useReducer(\n    reducer,\n    {}\n  );\n\n  return (\n    <div className=\"calculator\">\n      <div className=\"output\">\n        <div className=\"pre-operand\">\n          {\" \"}\n          {numberFormatter(preOperand)} {operator}\n        </div>\n        <div className=\"current-operand\">{numberFormatter(currentOperand)}</div>\n      </div>\n      <button\n        className=\"hightlight1 span-two\"\n        onClick={() => dispatch({ type: ACTION.CLEAR })}\n      >\n        AC\n      </button>\n      <button\n        className=\"hightlight1\"\n        onClick={() => dispatch({ type: ACTION.DELETE })}\n      >\n        DEL\n      </button>\n      <OperandButton operator=\"/\" dispatch={dispatch} />\n      <DigitButton digit=\"1\" dispatch={dispatch} />\n      <DigitButton digit=\"2\" dispatch={dispatch} />\n      <DigitButton digit=\"3\" dispatch={dispatch} />\n      <OperandButton operator=\"*\" dispatch={dispatch} />\n      <DigitButton digit=\"4\" dispatch={dispatch} />\n      <DigitButton digit=\"5\" dispatch={dispatch} />\n      <DigitButton digit=\"6\" dispatch={dispatch} />\n      <OperandButton operator=\"+\" dispatch={dispatch} />\n      <DigitButton digit=\"7\" dispatch={dispatch} />\n      <DigitButton digit=\"8\" dispatch={dispatch} />\n      <DigitButton digit=\"9\" dispatch={dispatch} />\n      <OperandButton operator=\"-\" dispatch={dispatch} />\n      <DigitButton digit=\".\" dispatch={dispatch} />\n      <DigitButton digit=\"0\" dispatch={dispatch} />\n      <button\n        className=\" highlight2 span-two\"\n        onClick={() => dispatch({ type: ACTION.EQUALS })}\n      >\n        =\n      </button>\n    </div>\n  );\n}\n\nexport default Calculator;\n","import \"./counter.css\";\nimport React, { useReducer, useState } from \"react\";\n\nconst ACTION = {\n  INCREMENT: \"increment\",\n  DECREMENT: \"decrement\",\n  RESET: \"reset\",\n  ADD_COUNT: \"add-count\",\n  SUB_COUNT: \"sub-count\",\n};\n\nconst reducer = (count, action) => {\n  switch (action.type) {\n    case ACTION.INCREMENT:\n      return count + 1;\n    case ACTION.DECREMENT:\n      return count - 1;\n    case ACTION.RESET:\n      return 0;\n    case ACTION.ADD_COUNT:\n      return count + action.payload.amount;\n    case ACTION.SUB_COUNT:\n      return count - action.payload.amount;\n    default:\n      return count;\n  }\n};\n\nfunction Counter() {\n  const [count, dispatch] = useReducer(reducer, 0);\n  const [addAmount, setAddAmount] = useState(5);\n  const [subAmount, setSubAmount] = useState(5);\n  const [error, setError] = useState(\"\");\n\n  const sendDispatchNoError = (type, amount) => {\n    setError(\"\");\n    console.log(amount % 1 === 0);\n    dispatch({\n      type: type,\n      payload: { amount: amount },\n    });\n  };\n\n  return (\n    <div className=\"counter\">\n      {error ? (\n        <div className=\"error\">\n          <h2 className=\"errorMessage\">{error}</h2>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <span>{count}</span>\n      <div className=\"btnContainer\">\n        <button\n          className=\"actionBtn\"\n          onClick={() => dispatch({ type: ACTION.INCREMENT })}\n        >\n          {\" \"}\n          +{\" \"}\n        </button>\n        <button\n          className=\"actionBtn\"\n          onClick={() => dispatch({ type: ACTION.DECREMENT })}\n        >\n          {\" \"}\n          -{\" \"}\n        </button>\n      </div>\n      <div className=\"btnContainer\">\n        <div className=\"changeBtn\">\n          <button\n            onClick={() =>\n              parseInt(addAmount) > 0 && !addAmount.includes(\".\")\n                ? sendDispatchNoError(ACTION.ADD_COUNT, parseInt(addAmount))\n                : setError(\"Add amount should be positive whole number\")\n            }\n          >\n            Add\n          </button>\n          <input\n            type=\"number\"\n            placeholder=\"5\"\n            value={addAmount}\n            required\n            step=\"any\"\n            min=\"0\"\n            onChange={(e) => {\n              setAddAmount(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"changeBtn\">\n          <button\n            onClick={() =>\n              parseInt(subAmount) > 0 && !subAmount.includes(\".\")\n                ? sendDispatchNoError(ACTION.SUB_COUNT, parseInt(subAmount))\n                : setError(\"Subtract amount should be positive whole number\")\n            }\n          >\n            Subtract\n          </button>\n          <input\n            type=\"number\"\n            placeholder=\"5\"\n            value={subAmount}\n            required\n            step=\"any\"\n            min=\"0\"\n            onChange={(e) => {\n              setSubAmount(e.target.value);\n            }}\n          />\n        </div>\n      </div>\n      <button\n        className=\"reset\"\n        onClick={() => {\n          setError(\"\");\n          dispatch({ type: ACTION.RESET });\n        }}\n      >\n        {\" \"}\n        Reset{\" \"}\n      </button>\n    </div>\n  );\n}\n\nexport default Counter;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./joke.css\";\n\nfunction Joke() {\n  const [dadJoke, setDadJoke] = useState();\n  const [geekJoke, setGeekJoke] = useState();\n  const [chukNorrisJoke, setChukNorrisJoke] = useState();\n\n  const jokeCategories = [\n    \"Misc\",\n    \"Programming\",\n    \"Dark\",\n    \"Pun\",\n    \"Spooky\",\n    \"Christmas\",\n  ];\n  const blackList = [\n    \"NSFW\",\n    \"Religious\",\n    \"Political\",\n    \"Racist\",\n    \"Sexist\",\n    \" Explicit\",\n  ];\n  const [jokeCategoriesState, setJokeCategoriesState] = useState(\n    new Array(jokeCategories.length).fill(false)\n  );\n  const [blackListState, setBlackListState] = useState(\n    new Array(blackList.length).fill(false)\n  );\n\n  const changeJokeCategoriesState = (position) => {\n    const updatedState = jokeCategoriesState.map((item, index) =>\n      index === position ? !item : item\n    );\n\n    setJokeCategoriesState(updatedState);\n    console.log(\"jc state \", jokeCategoriesState);\n  };\n\n  const changeBlackListState = (position) => {\n    const updatedState = blackListState.map((item, index) =>\n      index === position ? !item : item\n    );\n\n    console.log(\"bl state \", blackListState);\n    setBlackListState(updatedState);\n  };\n\n  const getCustomeJoke = () => {\n    console.log(\"in\");\n    var baseURL = \"https://v2.jokeapi.dev\";\n    var categories = [\"Programming\", \"Misc\", \"Pun\", \"Spooky\", \"Christmas\"];\n    var params = [\"blacklistFlags=nsfw,religious,racist\", \"idRange=0-100\"];\n\n    var xhr = new XMLHttpRequest();\n    xhr.open(\n      \"GET\",\n      baseURL + \"/joke/\" + categories.join(\",\") + \"?\" + params.join(\"&\")\n    );\n\n    xhr.onreadystatechange = function() {\n      console.log(\"inin\");\n      if (xhr.readyState == 4 && xhr.status < 300) {\n        // readyState 4 means request has finished + we only want to parse the joke if the request was successful (status code lower than 300)\n        console.log(JSON.parse(xhr.responseText));\n        var randomJoke = JSON.parse(xhr.responseText);\n\n        if (randomJoke.type == \"single\") {\n          // If type == \"single\", the joke only has the \"joke\" property\n          alert(randomJoke.joke);\n        } else {\n          // If type == \"single\", the joke only has the \"joke\" property\n          alert(randomJoke.setup);\n          alert(randomJoke.delivery);\n        }\n      } else if (xhr.readyState == 4) {\n        alert(\n          \"Error while requesting joke.\\n\\nStatus code: \" +\n            xhr.status +\n            \"\\nServer response: \" +\n            xhr.responseText\n        );\n      }\n    };\n\n    xhr.send();\n  };\n\n  const getDadJoke = async () => {\n    const config = { headers: { Accept: \"application/json\" } };\n    const response = await axios.get(\"https://icanhazdadjoke.com\", config);\n    setDadJoke(response.data.joke);\n  };\n\n  function getGeekJoke() {\n    const options = {\n      method: \"GET\",\n      url: \"https://geek-jokes.p.rapidapi.com/api\",\n      params: { format: \"json\" },\n      headers: {\n        \"X-RapidAPI-Key\": \"4fb4f254dcmshee3ba62f4789d9ap17554fjsne2866961424c\",\n        \"X-RapidAPI-Host\": \"geek-jokes.p.rapidapi.com\",\n      },\n    };\n\n    axios\n      .request(options)\n      .then(function(response) {\n        // console.log(response.data);\n        setGeekJoke(response.data.joke);\n      })\n      .catch(function(error) {\n        console.error(error);\n      });\n  }\n\n  return (\n    <div className=\"joke\">\n      {/* <div className=\"container\">\n        <div>\n          <h2>Custome Joke</h2>\n          <button onClick={() => getCustomeJoke()} className=\"jokeBtn\">\n            Generate\n          </button>\n        </div>\n        <div className=\"options\">\n          <fieldset>\n            <legend> Choose Categories</legend>\n            {jokeCategories.map((name, index) => {\n              return (\n                <div key={index}>\n                  <input\n                    type=\"checkbox\"\n                    id={`jc-checkbox-${index}`}\n                    name={name}\n                    value={name}\n                    checked={jokeCategoriesState[index]}\n                    onChange={() => changeJokeCategoriesState(index)}\n                  ></input>\n                  <label htmlFor={name}>{name}</label>\n                </div>\n              );\n            })}\n          </fieldset>\n          <fieldset>\n            <legend> Black List</legend>\n            {blackList.map((name, index) => {\n              return (\n                <div key={index}>\n                  <input\n                    type=\"checkbox\"\n                    id={`bl-checkbox-${index}`}\n                    name={name}\n                    value={name}\n                    checked={blackListState[index]}\n                    onChange={() => changeBlackListState(index)}\n                  ></input>\n                  <label htmlFor={name}>{name}</label>\n                </div>\n              );\n            })}\n          </fieldset>\n        </div>\n        <div className=\"display\">\n          <h3>{dadJoke}</h3>\n        </div>\n      </div> */}\n      <div className=\"container\">\n        <div>\n          <h2>Dad Joke</h2>\n          <button\n            className=\"jokeBtn\"\n            onClick={() => {\n              getDadJoke();\n            }}\n          >\n            Generate\n          </button>\n        </div>\n        <div className=\"display\">\n          <h3>{dadJoke}</h3>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div>\n          <h2>Geek Joke</h2>\n          <button className=\"jokeBtn\" onClick={() => getGeekJoke()}>\n            Generate\n          </button>\n        </div>\n        <div className=\"display\">\n          <h3>{geekJoke}</h3>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Joke;\n","const CurrencyList = {\n  AED: {\n    currency_name: \"United Arab Emirates dirham\",\n    currency_code: \"AED\",\n    decimal_units: \"2\",\n    countries: [\"United Arab Emirates\"],\n  },\n  AFN: {\n    currency_name: \"Afghan afghani\",\n    currency_code: \"AFN\",\n    decimal_units: \"2\",\n    countries: [\"Afghanistan\"],\n  },\n  ALL: {\n    currency_name: \"Albanian lek\",\n    currency_code: \"ALL\",\n    decimal_units: \"2\",\n    countries: [\"Albania\"],\n  },\n  AMD: {\n    currency_name: \"Armenian dram\",\n    currency_code: \"AMD\",\n    decimal_units: \"2\",\n    countries: [\"Armenia\"],\n  },\n  ANG: {\n    currency_name: \"Netherlands Antillean guilder\",\n    currency_code: \"ANG\",\n    decimal_units: \"2\",\n    countries: [\"Curaçao (CW)\", \"Sint Maarten (SX)\"],\n  },\n  AOA: {\n    currency_name: \"Angolan kwanza\",\n    currency_code: \"AOA\",\n    decimal_units: \"2\",\n    countries: [\"Angola\"],\n  },\n  ARS: {\n    currency_name: \"Argentine peso\",\n    currency_code: \"ARS\",\n    decimal_units: \"2\",\n    countries: [\"Argentina\"],\n  },\n  AUD: {\n    currency_name: \"Australian dollar\",\n    currency_code: \"AUD\",\n    decimal_units: \"2\",\n    countries: [\n      \"Australia\",\n      \"Christmas Island (CX)\",\n      \"Cocos (Keeling) Islands (CC)\",\n      \"Heard Island and McDonald Islands (HM)\",\n      \"Kiribati (KI)\",\n      \"Nauru (NR)\",\n      \"Norfolk Island (NF)\",\n      \"Tuvalu (TV)\",\n    ],\n  },\n  AWG: {\n    currency_name: \"Aruban florin\",\n    currency_code: \"AWG\",\n    decimal_units: \"2\",\n    countries: [\"Aruba\"],\n  },\n  AZN: {\n    currency_name: \"Azerbaijani manat\",\n    currency_code: \"AZN\",\n    decimal_units: \"2\",\n    countries: [\"Azerbaijan\"],\n  },\n  BAM: {\n    currency_name: \"Bosnia and Herzegovina convertible mark\",\n    currency_code: \"BAM\",\n    decimal_units: \"2\",\n    countries: [\"Bosnia and Herzegovina\"],\n  },\n  BBD: {\n    currency_name: \"Barbados dollar\",\n    currency_code: \"BBD\",\n    decimal_units: \"2\",\n    countries: [\"Barbados\"],\n  },\n  BDT: {\n    currency_name: \"Bangladeshi taka\",\n    currency_code: \"BDT\",\n    decimal_units: \"2\",\n    countries: [\"Bangladesh\"],\n  },\n  BGN: {\n    currency_name: \"Bulgarian lev\",\n    currency_code: \"BGN\",\n    decimal_units: \"2\",\n    countries: [\"Bulgaria\"],\n  },\n  BHD: {\n    currency_name: \"Bahraini dinar\",\n    currency_code: \"BHD\",\n    decimal_units: \"3\",\n    countries: [\"Bahrain\"],\n  },\n  BIF: {\n    currency_name: \"Burundian franc\",\n    currency_code: \"BIF\",\n    decimal_units: \"0\",\n    countries: [\"Burundi\"],\n  },\n  BMD: {\n    currency_name: \"Bermudian dollar\",\n    currency_code: \"BMD\",\n    decimal_units: \"2\",\n    countries: [\"Bermuda\"],\n  },\n  BND: {\n    currency_name: \"Brunei dollar\",\n    currency_code: \"BND\",\n    decimal_units: \"2\",\n    countries: [\"Brunei\"],\n  },\n  BOB: {\n    currency_name: \"Boliviano\",\n    currency_code: \"BOB\",\n    decimal_units: \"2\",\n    countries: [\"Bolivia\"],\n  },\n  BOV: {\n    currency_name: \"Bolivian Mvdol (funds code)\",\n    currency_code: \"BOV\",\n    decimal_units: \"2\",\n    countries: [\"Bolivia\"],\n  },\n  BRL: {\n    currency_name: \"Brazilian real\",\n    currency_code: \"BRL\",\n    decimal_units: \"2\",\n    countries: [\"Brazil\"],\n  },\n  BSD: {\n    currency_name: \"Bahamian dollar\",\n    currency_code: \"BSD\",\n    decimal_units: \"2\",\n    countries: [\"Bahamas\"],\n  },\n  BTN: {\n    currency_name: \"Bhutanese ngultrum\",\n    currency_code: \"BTN\",\n    decimal_units: \"2\",\n    countries: [\"Bhutan\"],\n  },\n  BWP: {\n    currency_name: \"Botswana pula\",\n    currency_code: \"BWP\",\n    decimal_units: \"2\",\n    countries: [\"Botswana\"],\n  },\n  BYN: {\n    currency_name: \"Belarusian ruble\",\n    currency_code: \"BYN\",\n    decimal_units: \"2\",\n    countries: [\"Belarus\"],\n  },\n  BZD: {\n    currency_name: \"Belize dollar\",\n    currency_code: \"BZD\",\n    decimal_units: \"2\",\n    countries: [\"Belize\"],\n  },\n  CAD: {\n    currency_name: \"Canadian dollar\",\n    currency_code: \"CAD\",\n    decimal_units: \"2\",\n    countries: [\"Canada\"],\n  },\n  CDF: {\n    currency_name: \"Congolese franc\",\n    currency_code: \"CDF\",\n    decimal_units: \"2\",\n    countries: [\"Democratic Republic of the Congo\"],\n  },\n  CHE: {\n    currency_name: \"WIR Euro (complementary currency)\",\n    currency_code: \"CHE\",\n    decimal_units: \"2\",\n    countries: [\"Switzerland\"],\n  },\n  CHF: {\n    currency_name: \"Swiss franc\",\n    currency_code: \"CHF\",\n    decimal_units: \"2\",\n    countries: [\"Switzerland\", \"Liechtenstein (LI)\"],\n  },\n  CHW: {\n    currency_name: \"WIR Franc (complementary currency)\",\n    currency_code: \"CHW\",\n    decimal_units: \"2\",\n    countries: [\"Switzerland\"],\n  },\n  CLF: {\n    currency_name: \"Unidad de Fomento (funds code)\",\n    currency_code: \"CLF\",\n    decimal_units: \"4\",\n    countries: [\"Chile\"],\n  },\n  CLP: {\n    currency_name: \"Chilean peso\",\n    currency_code: \"CLP\",\n    decimal_units: \"0\",\n    countries: [\"Chile\"],\n  },\n  CNY: {\n    currency_name: \"Renminbi (Chinese) yuan\",\n    currency_code: \"CNY\",\n    decimal_units: \"2\",\n    countries: [\"China\"],\n  },\n  COP: {\n    currency_name: \"Colombian peso\",\n    currency_code: \"COP\",\n    decimal_units: \"2\",\n    countries: [\"Colombia\"],\n  },\n  COU: {\n    currency_name: \"Unidad de Valor Real (UVR) (funds code)\",\n    currency_code: \"COU\",\n    decimal_units: \"2\",\n    countries: [\"Colombia\"],\n  },\n  CRC: {\n    currency_name: \"Costa Rican colon\",\n    currency_code: \"CRC\",\n    decimal_units: \"2\",\n    countries: [\"Costa Rica\"],\n  },\n  CUC: {\n    currency_name: \"Cuban convertible peso\",\n    currency_code: \"CUC\",\n    decimal_units: \"2\",\n    countries: [\"Cuba\"],\n  },\n  CUP: {\n    currency_name: \"Cuban peso\",\n    currency_code: \"CUP\",\n    decimal_units: \"2\",\n    countries: [\"Cuba\"],\n  },\n  CVE: {\n    currency_name: \"Cape Verdean escudo\",\n    currency_code: \"CVE\",\n    decimal_units: \"2\",\n    countries: [\"Cabo Verde\"],\n  },\n  CZK: {\n    currency_name: \"Czech koruna\",\n    currency_code: \"CZK\",\n    decimal_units: \"2\",\n    countries: [\"Czechia [9]\"],\n  },\n  DJF: {\n    currency_name: \"Djiboutian franc\",\n    currency_code: \"DJF\",\n    decimal_units: \"0\",\n    countries: [\"Djibouti\"],\n  },\n  DKK: {\n    currency_name: \"Danish krone\",\n    currency_code: \"DKK\",\n    decimal_units: \"2\",\n    countries: [\"Denmark\", \"Faroe Islands (FO)\", \"Greenland (GL)\"],\n  },\n  DOP: {\n    currency_name: \"Dominican peso\",\n    currency_code: \"DOP\",\n    decimal_units: \"2\",\n    countries: [\"Dominican Republic\"],\n  },\n  DZD: {\n    currency_name: \"Algerian dinar\",\n    currency_code: \"DZD\",\n    decimal_units: \"2\",\n    countries: [\"Algeria\"],\n  },\n  EGP: {\n    currency_name: \"Egyptian pound\",\n    currency_code: \"EGP\",\n    decimal_units: \"2\",\n    countries: [\"Egypt\"],\n  },\n  ERN: {\n    currency_name: \"Eritrean nakfa\",\n    currency_code: \"ERN\",\n    decimal_units: \"2\",\n    countries: [\"Eritrea\"],\n  },\n  ETB: {\n    currency_name: \"Ethiopian birr\",\n    currency_code: \"ETB\",\n    decimal_units: \"2\",\n    countries: [\"Ethiopia\"],\n  },\n  EUR: {\n    currency_name: \"Euro\",\n    currency_code: \"EUR\",\n    decimal_units: \"2\",\n    countries: [\n      \"Åland Islands (AX)\",\n      \"European Union (EU)\",\n      \"Andorra (AD)\",\n      \"Austria (AT)\",\n      \"Belgium (BE)\",\n      \"Cyprus (CY)\",\n      \"Estonia (EE)\",\n      \"Finland (FI)\",\n      \"France (FR)\",\n      \"French Southern and Antarctic Lands (TF)\",\n      \"Germany (DE)\",\n      \"Greece (GR)\",\n      \"Guadeloupe (GP)\",\n      \"Ireland (IE)\",\n      \"Italy (IT)\",\n      \"Kosovo (XK)\",\n      \"Latvia (LV)\",\n      \"Lithuania (LT)\",\n      \"Luxembourg (LU)\",\n      \"Malta (MT)\",\n      \"French Guiana (GF)\",\n      \"Martinique (MQ)\",\n      \"Mayotte (YT)\",\n      \"Monaco (MC)\",\n      \"Montenegro (ME)\",\n      \"Netherlands (NL)\",\n      \"Portugal (PT)\",\n      \"Réunion (RE)\",\n      \"Saint Barthélemy (BL)\",\n      \"Saint Martin (MF)\",\n      \"Saint Pierre and Miquelon (PM)\",\n      \"San Marino (SM)\",\n      \"Slovakia (SK)\",\n      \"Slovenia (SI)\",\n      \"Spain (ES)\",\n      \"Holy See (VA)\",\n    ],\n  },\n  FJD: {\n    currency_name: \"Fiji dollar\",\n    currency_code: \"FJD\",\n    decimal_units: \"2\",\n    countries: [\"Fiji\"],\n  },\n  FKP: {\n    currency_name: \"Falkland Islands pound\",\n    currency_code: \"FKP\",\n    decimal_units: \"2\",\n    countries: [\"Falkland Islands (pegged to GBP 1:1)\"],\n  },\n  GBP: {\n    currency_name: \"Pound sterling\",\n    currency_code: \"GBP\",\n    decimal_units: \"2\",\n    countries: [\n      \"United Kingdom\",\n      \"British Indian Ocean Territory (IO) (also uses USD)\",\n      \"the  Isle of Man (IM\",\n      \"see Manx pound)\",\n      \"Jersey (JE\",\n      \"see Jersey pound)\",\n      \"and  Guernsey (GG\",\n      \"see Guernsey pound)\",\n    ],\n  },\n  GEL: {\n    currency_name: \"Georgian lari\",\n    currency_code: \"GEL\",\n    decimal_units: \"2\",\n    countries: [\"Georgia\"],\n  },\n  GHS: {\n    currency_name: \"Ghanaian cedi\",\n    currency_code: \"GHS\",\n    decimal_units: \"2\",\n    countries: [\"Ghana\"],\n  },\n  GIP: {\n    currency_name: \"Gibraltar pound\",\n    currency_code: \"GIP\",\n    decimal_units: \"2\",\n    countries: [\"Gibraltar (pegged to GBP 1:1)\"],\n  },\n  GMD: {\n    currency_name: \"Gambian dalasi\",\n    currency_code: \"GMD\",\n    decimal_units: \"2\",\n    countries: [\"Gambia\"],\n  },\n  GNF: {\n    currency_name: \"Guinean franc\",\n    currency_code: \"GNF\",\n    decimal_units: \"0\",\n    countries: [\"Guinea\"],\n  },\n  GTQ: {\n    currency_name: \"Guatemalan quetzal\",\n    currency_code: \"GTQ\",\n    decimal_units: \"2\",\n    countries: [\"Guatemala\"],\n  },\n  GYD: {\n    currency_name: \"Guyanese dollar\",\n    currency_code: \"GYD\",\n    decimal_units: \"2\",\n    countries: [\"Guyana\"],\n  },\n  HKD: {\n    currency_name: \"Hong Kong dollar\",\n    currency_code: \"HKD\",\n    decimal_units: \"2\",\n    countries: [\"Hong Kong\"],\n  },\n  HNL: {\n    currency_name: \"Honduran lempira\",\n    currency_code: \"HNL\",\n    decimal_units: \"2\",\n    countries: [\"Honduras\"],\n  },\n  HRK: {\n    currency_name: \"Croatian kuna\",\n    currency_code: \"HRK\",\n    decimal_units: \"2\",\n    countries: [\"Croatia\"],\n  },\n  HTG: {\n    currency_name: \"Haitian gourde\",\n    currency_code: \"HTG\",\n    decimal_units: \"2\",\n    countries: [\"Haiti\"],\n  },\n  HUF: {\n    currency_name: \"Hungarian forint\",\n    currency_code: \"HUF\",\n    decimal_units: \"2\",\n    countries: [\"Hungary\"],\n  },\n  IDR: {\n    currency_name: \"Indonesian rupiah\",\n    currency_code: \"IDR\",\n    decimal_units: \"2\",\n    countries: [\"Indonesia\"],\n  },\n  ILS: {\n    currency_name: \"Israeli new shekel\",\n    currency_code: \"ILS\",\n    decimal_units: \"2\",\n    countries: [\"Israel\", \"Palestinian Authority[10]\"],\n  },\n  INR: {\n    currency_name: \"Indian rupee\",\n    currency_code: \"INR\",\n    decimal_units: \"2\",\n    countries: [\"India\", \"Bhutan\"],\n  },\n  IQD: {\n    currency_name: \"Iraqi dinar\",\n    currency_code: \"IQD\",\n    decimal_units: \"3\",\n    countries: [\"Iraq\"],\n  },\n  IRR: {\n    currency_name: \"Iranian rial\",\n    currency_code: \"IRR\",\n    decimal_units: \"2\",\n    countries: [\"Iran\"],\n  },\n  ISK: {\n    currency_name: \"Icelandic króna\",\n    currency_code: \"ISK\",\n    decimal_units: \"0\",\n    countries: [\"Iceland\"],\n  },\n  JMD: {\n    currency_name: \"Jamaican dollar\",\n    currency_code: \"JMD\",\n    decimal_units: \"2\",\n    countries: [\"Jamaica\"],\n  },\n  JOD: {\n    currency_name: \"Jordanian dinar\",\n    currency_code: \"JOD\",\n    decimal_units: \"3\",\n    countries: [\"Jordan\"],\n  },\n  JPY: {\n    currency_name: \"Japanese yen\",\n    currency_code: \"JPY\",\n    decimal_units: \"0\",\n    countries: [\"Japan\"],\n  },\n  KES: {\n    currency_name: \"Kenyan shilling\",\n    currency_code: \"KES\",\n    decimal_units: \"2\",\n    countries: [\"Kenya\"],\n  },\n  KGS: {\n    currency_name: \"Kyrgyzstani som\",\n    currency_code: \"KGS\",\n    decimal_units: \"2\",\n    countries: [\"Kyrgyzstan\"],\n  },\n  KHR: {\n    currency_name: \"Cambodian riel\",\n    currency_code: \"KHR\",\n    decimal_units: \"2\",\n    countries: [\"Cambodia\"],\n  },\n  KMF: {\n    currency_name: \"Comoro franc\",\n    currency_code: \"KMF\",\n    decimal_units: \"0\",\n    countries: [\"Comoros\"],\n  },\n  KPW: {\n    currency_name: \"North Korean won\",\n    currency_code: \"KPW\",\n    decimal_units: \"2\",\n    countries: [\"North Korea\"],\n  },\n  KRW: {\n    currency_name: \"South Korean won\",\n    currency_code: \"KRW\",\n    decimal_units: \"0\",\n    countries: [\"South Korea\"],\n  },\n  KWD: {\n    currency_name: \"Kuwaiti dinar\",\n    currency_code: \"KWD\",\n    decimal_units: \"3\",\n    countries: [\"Kuwait\"],\n  },\n  KYD: {\n    currency_name: \"Cayman Islands dollar\",\n    currency_code: \"KYD\",\n    decimal_units: \"2\",\n    countries: [\"Cayman Islands\"],\n  },\n  KZT: {\n    currency_name: \"Kazakhstani tenge\",\n    currency_code: \"KZT\",\n    decimal_units: \"2\",\n    countries: [\"Kazakhstan\"],\n  },\n  LAK: {\n    currency_name: \"Lao kip\",\n    currency_code: \"LAK\",\n    decimal_units: \"2\",\n    countries: [\"Laos\"],\n  },\n  LBP: {\n    currency_name: \"Lebanese pound\",\n    currency_code: \"LBP\",\n    decimal_units: \"2\",\n    countries: [\"Lebanon\"],\n  },\n  LKR: {\n    currency_name: \"Sri Lankan rupee\",\n    currency_code: \"LKR\",\n    decimal_units: \"2\",\n    countries: [\"Sri Lanka\"],\n  },\n  LRD: {\n    currency_name: \"Liberian dollar\",\n    currency_code: \"LRD\",\n    decimal_units: \"2\",\n    countries: [\"Liberia\"],\n  },\n  LSL: {\n    currency_name: \"Lesotho loti\",\n    currency_code: \"LSL\",\n    decimal_units: \"2\",\n    countries: [\"Lesotho\"],\n  },\n  LYD: {\n    currency_name: \"Libyan dinar\",\n    currency_code: \"LYD\",\n    decimal_units: \"3\",\n    countries: [\"Libya\"],\n  },\n  MAD: {\n    currency_name: \"Moroccan dirham\",\n    currency_code: \"MAD\",\n    decimal_units: \"2\",\n    countries: [\"Morocco\", \"Western Sahara\"],\n  },\n  MDL: {\n    currency_name: \"Moldovan leu\",\n    currency_code: \"MDL\",\n    decimal_units: \"2\",\n    countries: [\"Moldova\"],\n  },\n  MGA: {\n    currency_name: \"Malagasy ariary\",\n    currency_code: \"MGA\",\n    decimal_units: \"2\",\n    countries: [\"Madagascar\"],\n  },\n  MKD: {\n    currency_name: \"Macedonian denar\",\n    currency_code: \"MKD\",\n    decimal_units: \"2\",\n    countries: [\"North Macedonia\"],\n  },\n  MMK: {\n    currency_name: \"Myanmar kyat\",\n    currency_code: \"MMK\",\n    decimal_units: \"2\",\n    countries: [\"Myanmar\"],\n  },\n  MNT: {\n    currency_name: \"Mongolian tögrög\",\n    currency_code: \"MNT\",\n    decimal_units: \"2\",\n    countries: [\"Mongolia\"],\n  },\n  MOP: {\n    currency_name: \"Macanese pataca\",\n    currency_code: \"MOP\",\n    decimal_units: \"2\",\n    countries: [\"Macau\"],\n  },\n  MRU: {\n    currency_name: \"Mauritanian ouguiya\",\n    currency_code: \"MRU\",\n    decimal_units: \"2\",\n    countries: [\"Mauritania\"],\n  },\n  MUR: {\n    currency_name: \"Mauritian rupee\",\n    currency_code: \"MUR\",\n    decimal_units: \"2\",\n    countries: [\"Mauritius\"],\n  },\n  MVR: {\n    currency_name: \"Maldivian rufiyaa\",\n    currency_code: \"MVR\",\n    decimal_units: \"2\",\n    countries: [\"Maldives\"],\n  },\n  MWK: {\n    currency_name: \"Malawian kwacha\",\n    currency_code: \"MWK\",\n    decimal_units: \"2\",\n    countries: [\"Malawi\"],\n  },\n  MXN: {\n    currency_name: \"Mexican peso\",\n    currency_code: \"MXN\",\n    decimal_units: \"2\",\n    countries: [\"Mexico\"],\n  },\n  MXV: {\n    currency_name: \"Mexican Unidad de Inversion (UDI) (funds code)\",\n    currency_code: \"MXV\",\n    decimal_units: \"2\",\n    countries: [\"Mexico\"],\n  },\n  MYR: {\n    currency_name: \"Malaysian ringgit\",\n    currency_code: \"MYR\",\n    decimal_units: \"2\",\n    countries: [\"Malaysia\"],\n  },\n  MZN: {\n    currency_name: \"Mozambican metical\",\n    currency_code: \"MZN\",\n    decimal_units: \"2\",\n    countries: [\"Mozambique\"],\n  },\n  NAD: {\n    currency_name: \"Namibian dollar\",\n    currency_code: \"NAD\",\n    decimal_units: \"2\",\n    countries: [\"Namibia\"],\n  },\n  NGN: {\n    currency_name: \"Nigerian naira\",\n    currency_code: \"NGN\",\n    decimal_units: \"2\",\n    countries: [\"Nigeria\"],\n  },\n  NIO: {\n    currency_name: \"Nicaraguan córdoba\",\n    currency_code: \"NIO\",\n    decimal_units: \"2\",\n    countries: [\"Nicaragua\"],\n  },\n  NOK: {\n    currency_name: \"Norwegian krone\",\n    currency_code: \"NOK\",\n    decimal_units: \"2\",\n    countries: [\"Norway\", \"Svalbard and  Jan Mayen (SJ)\", \"Bouvet Island (BV)\"],\n  },\n  NPR: {\n    currency_name: \"Nepalese rupee\",\n    currency_code: \"NPR\",\n    decimal_units: \"2\",\n    countries: [\"Nepal\"],\n  },\n  NZD: {\n    currency_name: \"New Zealand dollar\",\n    currency_code: \"NZD\",\n    decimal_units: \"2\",\n    countries: [\n      \"New Zealand\",\n      \"Cook Islands (CK)\",\n      \"Niue (NU)\",\n      \"Pitcairn Islands (PN; see also Pitcairn Islands dollar)\",\n      \"Tokelau (TK)\",\n    ],\n  },\n  OMR: {\n    currency_name: \"Omani rial\",\n    currency_code: \"OMR\",\n    decimal_units: \"3\",\n    countries: [\"Oman\"],\n  },\n  PAB: {\n    currency_name: \"Panamanian balboa\",\n    currency_code: \"PAB\",\n    decimal_units: \"2\",\n    countries: [\"Panama\"],\n  },\n  PEN: {\n    currency_name: \"Peruvian sol\",\n    currency_code: \"PEN\",\n    decimal_units: \"2\",\n    countries: [\"Peru\"],\n  },\n  PGK: {\n    currency_name: \"Papua New Guinean kina\",\n    currency_code: \"PGK\",\n    decimal_units: \"2\",\n    countries: [\"Papua New Guinea\"],\n  },\n  PHP: {\n    currency_name: \"Philippine peso[13]\",\n    currency_code: \"PHP\",\n    decimal_units: \"2\",\n    countries: [\"Philippines\"],\n  },\n  PKR: {\n    currency_name: \"Pakistani rupee\",\n    currency_code: \"PKR\",\n    decimal_units: \"2\",\n    countries: [\"Pakistan\"],\n  },\n  PLN: {\n    currency_name: \"Polish złoty\",\n    currency_code: \"PLN\",\n    decimal_units: \"2\",\n    countries: [\"Poland\"],\n  },\n  PYG: {\n    currency_name: \"Paraguayan guaraní\",\n    currency_code: \"PYG\",\n    decimal_units: \"0\",\n    countries: [\"Paraguay\"],\n  },\n  QAR: {\n    currency_name: \"Qatari riyal\",\n    currency_code: \"QAR\",\n    decimal_units: \"2\",\n    countries: [\"Qatar\"],\n  },\n  RON: {\n    currency_name: \"Romanian leu\",\n    currency_code: \"RON\",\n    decimal_units: \"2\",\n    countries: [\"Romania\"],\n  },\n  RSD: {\n    currency_name: \"Serbian dinar\",\n    currency_code: \"RSD\",\n    decimal_units: \"2\",\n    countries: [\"Serbia\"],\n  },\n  RUB: {\n    currency_name: \"Russian ruble\",\n    currency_code: \"RUB\",\n    decimal_units: \"2\",\n    countries: [\"Russia\"],\n  },\n  RWF: {\n    currency_name: \"Rwandan franc\",\n    currency_code: \"RWF\",\n    decimal_units: \"0\",\n    countries: [\"Rwanda\"],\n  },\n  SAR: {\n    currency_name: \"Saudi riyal\",\n    currency_code: \"SAR\",\n    decimal_units: \"2\",\n    countries: [\"Saudi Arabia\"],\n  },\n  SBD: {\n    currency_name: \"Solomon Islands dollar\",\n    currency_code: \"SBD\",\n    decimal_units: \"2\",\n    countries: [\"Solomon Islands\"],\n  },\n  SCR: {\n    currency_name: \"Seychelles rupee\",\n    currency_code: \"SCR\",\n    decimal_units: \"2\",\n    countries: [\"Seychelles\"],\n  },\n  SDG: {\n    currency_name: \"Sudanese pound\",\n    currency_code: \"SDG\",\n    decimal_units: \"2\",\n    countries: [\"Sudan\"],\n  },\n  SEK: {\n    currency_name: \"Swedish krona/kronor\",\n    currency_code: \"SEK\",\n    decimal_units: \"2\",\n    countries: [\"Sweden\"],\n  },\n  SGD: {\n    currency_name: \"Singapore dollar\",\n    currency_code: \"SGD\",\n    decimal_units: \"2\",\n    countries: [\"Singapore\"],\n  },\n  SHP: {\n    currency_name: \"Saint Helena pound\",\n    currency_code: \"SHP\",\n    decimal_units: \"2\",\n    countries: [\n      \"Saint Helena (SH-SH)\",\n      \"Ascension Island (SH-AC)\",\n      \"Tristan da Cunha\",\n    ],\n  },\n  SLL: {\n    currency_name: \"Sierra Leonean leone\",\n    currency_code: \"SLL\",\n    decimal_units: \"2\",\n    countries: [\"Sierra Leone\"],\n  },\n  SOS: {\n    currency_name: \"Somali shilling\",\n    currency_code: \"SOS\",\n    decimal_units: \"2\",\n    countries: [\"Somalia\"],\n  },\n  SRD: {\n    currency_name: \"Surinamese dollar\",\n    currency_code: \"SRD\",\n    decimal_units: \"2\",\n    countries: [\"Suriname\"],\n  },\n  SSP: {\n    currency_name: \"South Sudanese pound\",\n    currency_code: \"SSP\",\n    decimal_units: \"2\",\n    countries: [\"South Sudan\"],\n  },\n  STN: {\n    currency_name: \"São Tomé and Príncipe dobra\",\n    currency_code: \"STN\",\n    decimal_units: \"2\",\n    countries: [\"São Tomé and Príncipe\"],\n  },\n  SVC: {\n    currency_name: \"Salvadoran colón\",\n    currency_code: \"SVC\",\n    decimal_units: \"2\",\n    countries: [\"El Salvador\"],\n  },\n  SYP: {\n    currency_name: \"Syrian pound\",\n    currency_code: \"SYP\",\n    decimal_units: \"2\",\n    countries: [\"Syria\"],\n  },\n  SZL: {\n    currency_name: \"Swazi lilangeni\",\n    currency_code: \"SZL\",\n    decimal_units: \"2\",\n    countries: [\"Eswatini[13]\"],\n  },\n  THB: {\n    currency_name: \"Thai baht\",\n    currency_code: \"THB\",\n    decimal_units: \"2\",\n    countries: [\"Thailand\"],\n  },\n  TJS: {\n    currency_name: \"Tajikistani somoni\",\n    currency_code: \"TJS\",\n    decimal_units: \"2\",\n    countries: [\"Tajikistan\"],\n  },\n  TMT: {\n    currency_name: \"Turkmenistan manat\",\n    currency_code: \"TMT\",\n    decimal_units: \"2\",\n    countries: [\"Turkmenistan\"],\n  },\n  TND: {\n    currency_name: \"Tunisian dinar\",\n    currency_code: \"TND\",\n    decimal_units: \"3\",\n    countries: [\"Tunisia\"],\n  },\n  TOP: {\n    currency_name: \"Tongan paʻanga\",\n    currency_code: \"TOP\",\n    decimal_units: \"2\",\n    countries: [\"Tonga\"],\n  },\n  TRY: {\n    currency_name: \"Turkish lira\",\n    currency_code: \"TRY\",\n    decimal_units: \"2\",\n    countries: [\"Turkey\", \"Northern Cyprus\"],\n  },\n  TTD: {\n    currency_name: \"Trinidad and Tobago dollar\",\n    currency_code: \"TTD\",\n    decimal_units: \"2\",\n    countries: [\"Trinidad and Tobago\"],\n  },\n  TWD: {\n    currency_name: \"New Taiwan dollar\",\n    currency_code: \"TWD\",\n    decimal_units: \"2\",\n    countries: [\"Taiwan\"],\n  },\n  TZS: {\n    currency_name: \"Tanzanian shilling\",\n    currency_code: \"TZS\",\n    decimal_units: \"2\",\n    countries: [\"Tanzania\"],\n  },\n  UAH: {\n    currency_name: \"Ukrainian hryvnia\",\n    currency_code: \"UAH\",\n    decimal_units: \"2\",\n    countries: [\"Ukraine\"],\n  },\n  UGX: {\n    currency_name: \"Ugandan shilling\",\n    currency_code: \"UGX\",\n    decimal_units: \"0\",\n    countries: [\"Uganda\"],\n  },\n  USD: {\n    currency_name: \"United States dollar\",\n    currency_code: \"USD\",\n    decimal_units: \"2\",\n    countries: [\n      \"United States\",\n      \"American Samoa (AS)\",\n      \"Barbados (BB) (as well as Barbados Dollar)\",\n      \"Bermuda (BM) (as well as Bermudian Dollar)\",\n      \"British Indian Ocean Territory (IO) (also uses GBP)\",\n      \"British Virgin Islands (VG)\",\n      \"Caribbean Netherlands (BQ – Bonaire\",\n      \"Sint Eustatius and Saba)\",\n      \"Ecuador (EC)\",\n      \"El Salvador (SV)\",\n      \"Guam (GU)\",\n      \"Haiti (HT)\",\n      \"Marshall Islands (MH)\",\n      \"Federated States of Micronesia (FM)\",\n      \"Northern Mariana Islands (MP)\",\n      \"Palau (PW)\",\n      \"Panama (PA) (as well as Panamanian Balboa)\",\n      \"Puerto Rico (PR)\",\n      \"Timor-Leste (TL)\",\n      \"Turks and Caicos Islands (TC)\",\n      \"U.S. Virgin Islands (VI)\",\n      \"United States Minor Outlying Islands (UM)  Cambodia also uses the USD officially.\",\n    ],\n  },\n  USN: {\n    currency_name: \"United States dollar (next day) (funds code)\",\n    currency_code: \"USN\",\n    decimal_units: \"2\",\n    countries: [\"United States\"],\n  },\n  UYI: {\n    currency_name: \"Uruguay Peso en Unidades Indexadas (URUIURUI) (funds code)\",\n    currency_code: \"UYI\",\n    decimal_units: \"0\",\n    countries: [\"Uruguay\"],\n  },\n  UYU: {\n    currency_name: \"Uruguayan peso\",\n    currency_code: \"UYU\",\n    decimal_units: \"2\",\n    countries: [\"Uruguay\"],\n  },\n  UYW: {\n    currency_name: \"Unidad previsional[15]\",\n    currency_code: \"UYW\",\n    decimal_units: \"4\",\n    countries: [\"Uruguay\"],\n  },\n  UZS: {\n    currency_name: \"Uzbekistan som\",\n    currency_code: \"UZS\",\n    decimal_units: \"2\",\n    countries: [\"Uzbekistan\"],\n  },\n  VES: {\n    currency_name: \"Venezuelan bolívar soberano[13]\",\n    currency_code: \"VES\",\n    decimal_units: \"2\",\n    countries: [\"Venezuela\"],\n  },\n  VND: {\n    currency_name: \"Vietnamese đồng\",\n    currency_code: \"VND\",\n    decimal_units: \"0\",\n    countries: [\"Vietnam\"],\n  },\n  VUV: {\n    currency_name: \"Vanuatu vatu\",\n    currency_code: \"VUV\",\n    decimal_units: \"0\",\n    countries: [\"Vanuatu\"],\n  },\n  WST: {\n    currency_name: \"Samoan tala\",\n    currency_code: \"WST\",\n    decimal_units: \"2\",\n    countries: [\"Samoa\"],\n  },\n  XAF: {\n    currency_name: \"CFA franc BEAC\",\n    currency_code: \"XAF\",\n    decimal_units: \"0\",\n    countries: [\n      \"Cameroon (CM)\",\n      \"Central African Republic (CF)\",\n      \"Republic of the Congo (CG)\",\n      \"Chad (TD)\",\n      \"Equatorial Guinea (GQ)\",\n      \"Gabon (GA)\",\n    ],\n  },\n  XAG: {\n    currency_name: \"Silver (one troy ounce)\",\n    currency_code: \"XAG\",\n    decimal_units: \".\",\n    countries: [\"\"],\n  },\n  XAU: {\n    currency_name: \"Gold (one troy ounce)\",\n    currency_code: \"XAU\",\n    decimal_units: \".\",\n    countries: [\"\"],\n  },\n  XBA: {\n    currency_name: \"European Composite Unit (EURCO) (bond market unit)\",\n    currency_code: \"XBA\",\n    decimal_units: \".\",\n    countries: [\"\"],\n  },\n  XBB: {\n    currency_name: \"European Monetary Unit (E.M.U.-6) (bond market unit)\",\n    currency_code: \"XBB\",\n    decimal_units: \".\",\n    countries: [\"\"],\n  },\n  XBC: {\n    currency_name: \"European Unit of Account 9 (E.U.A.-9) (bond market unit)\",\n    currency_code: \"XBC\",\n    decimal_units: \".\",\n    countries: [\"\"],\n  },\n  XBD: {\n    currency_name: \"European Unit of Account 17 (E.U.A.-17) (bond market unit)\",\n    currency_code: \"XBD\",\n    decimal_units: \".\",\n    countries: [\"\"],\n  },\n  XCD: {\n    currency_name: \"East Caribbean dollar\",\n    currency_code: \"XCD\",\n    decimal_units: \"2\",\n    countries: [\n      \"Anguilla (AI)\",\n      \"Antigua and Barbuda (AG)\",\n      \"Dominica (DM)\",\n      \"Grenada (GD)\",\n      \"Montserrat (MS)\",\n      \"Saint Kitts and Nevis (KN)\",\n      \"Saint Lucia (LC)\",\n      \"Saint Vincent and the Grenadines (VC)\",\n    ],\n  },\n  XDR: {\n    currency_name: \"Special drawing rights\",\n    currency_code: \"XDR\",\n    decimal_units: \".\",\n    countries: [\"International Monetary Fund\"],\n  },\n  XOF: {\n    currency_name: \"CFA franc BCEAO\",\n    currency_code: \"XOF\",\n    decimal_units: \"0\",\n    countries: [\n      \"Benin (BJ)\",\n      \"Burkina Faso (BF)\",\n      \"Côte d'Ivoire (CI)\",\n      \"Guinea-Bissau (GW)\",\n      \"Mali (ML)\",\n      \"Niger (NE)\",\n      \"Senegal (SN)\",\n      \"Togo (TG)\",\n    ],\n  },\n  XPD: {\n    currency_name: \"Palladium (one troy ounce)\",\n    currency_code: \"XPD\",\n    decimal_units: \".\",\n    countries: [\"\"],\n  },\n  XPF: {\n    currency_name: \"CFP franc (franc Pacifique)\",\n    currency_code: \"XPF\",\n    decimal_units: \"0\",\n    countries: [\n      \"French territories of the Pacific Ocean:  French Polynesia (PF)\",\n      \"New Caledonia (NC)\",\n      \"Wallis and Futuna (WF)\",\n    ],\n  },\n  XPT: {\n    currency_name: \"Platinum (one troy ounce)\",\n    currency_code: \"XPT\",\n    decimal_units: \".\",\n    countries: [\"\"],\n  },\n  XSU: {\n    currency_name: \"SUCRE\",\n    currency_code: \"XSU\",\n    decimal_units: \".\",\n    countries: [\"Unified System for Regional Compensation (SUCRE)[16]\"],\n  },\n  XTS: {\n    currency_name: \"Code reserved for testing\",\n    currency_code: \"XTS\",\n    decimal_units: \".\",\n    countries: [\"\"],\n  },\n  XUA: {\n    currency_name: \"ADB Unit of Account\",\n    currency_code: \"XUA\",\n    decimal_units: \".\",\n    countries: [\"African Development Bank[17]\"],\n  },\n  XXX: {\n    currency_name: \"No currency\",\n    currency_code: \"XXX\",\n    decimal_units: \".\",\n    countries: [\"\"],\n  },\n  YER: {\n    currency_name: \"Yemeni rial\",\n    currency_code: \"YER\",\n    decimal_units: \"2\",\n    countries: [\"Yemen\"],\n  },\n  ZAR: {\n    currency_name: \"South African rand\",\n    currency_code: \"ZAR\",\n    decimal_units: \"2\",\n    countries: [\"Lesotho\", \"Namibia\", \"South Africa\"],\n  },\n  ZMW: {\n    currency_name: \"Zambian kwacha\",\n    currency_code: \"ZMW\",\n    decimal_units: \"2\",\n    countries: [\"Zambia\"],\n  },\n  ZWL: {\n    currency_name: \"Zimbabwean dollar\",\n    currency_code: \"ZWL\",\n    decimal_units: \"2\",\n    countries: [\"Zimbabwe\"],\n  },\n};\n\nObject.freeze(CurrencyList); //This line of code just makes your object as a constant. No values can be updated.\n\nexport default CurrencyList;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./currencyConverter.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRightLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport CurrencyList from \"./currencyList\";\n\nfunction CurrencyConverter() {\n  const [convFrom, setConvFrom] = useState(\"AUD\");\n  const [convTo, setConvTo] = useState(\"NPR\");\n  const [amount, setAmount] = useState(1);\n  const [toAmount, setToAmount] = useState(1);\n  const [fromAmount, setFromAmount] = useState(1);\n  const [isFrom, setisFrom] = useState(true);\n  const [isFromBtn, setisFromBtn] = useState(true);\n  const currencyList = [...Object.keys(CurrencyList)];\n\n  useEffect(() => {\n    if (isFrom || isFromBtn) {\n      setFromAmount(amount);\n      convert(convFrom, convTo, amount, isFrom);\n    } else {\n      setToAmount(amount);\n      convert(convTo, convFrom, amount, isFrom);\n    }\n    function convert(from, to, amount, isFrom) {\n      const options = {\n        method: \"GET\",\n        url: \"https://currency-converter-by-api-ninjas.p.rapidapi.com/v1/convertcurrency\",\n        params: { have: from, want: to, amount: amount },\n        headers: {\n          \"X-RapidAPI-Key\":\n            \"4fb4f254dcmshee3ba62f4789d9ap17554fjsne2866961424c\",\n          \"X-RapidAPI-Host\": \"currency-converter-by-api-ninjas.p.rapidapi.com\",\n        },\n      };\n      axios\n        .request(options)\n        .then(function (response) {\n          isFrom\n            ? setToAmount(response.data.new_amount)\n            : setFromAmount(response.data.new_amount);\n        })\n        .catch(function (error) {\n          console.error(error);\n          setToAmount(0);\n          setFromAmount(0);\n        });\n    }\n  }, [amount, convFrom, convTo]);\n\n  const changedFrom = (amount) => {\n    setAmount(amount);\n    setisFrom(true);\n  };\n\n  const changedTo = (amount) => {\n    setAmount(amount);\n    setisFrom(false);\n  };\n\n  return (\n    <div className=\"currencyConverter\">\n      <div className=\"exBlock\">\n        <div className=\"exInput\">\n          <input\n            type=\"number\"\n            placeholder=\"0\"\n            required\n            step=\"any\"\n            min=\"0\"\n            value={fromAmount}\n            onChange={(e) => changedFrom(e.target.value)}\n          />\n          <select\n            value={convFrom}\n            onChange={(e) => {\n              setisFromBtn(true);\n              setConvFrom(e.target.value);\n            }}\n          >\n            {currencyList.map((option) => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n        <span className=\"exIcon\">\n          <FontAwesomeIcon icon={faRightLeft} />\n        </span>\n        <div className=\"exInput\">\n          <input\n            type=\"number\"\n            placeholder=\"0\"\n            required\n            step=\"any\"\n            min=\"0\"\n            value={toAmount}\n            onChange={(e) => changedTo(e.target.value)}\n          />\n          <select\n            value={convTo}\n            onChange={(e) => {\n              setisFromBtn(false);\n              setConvTo(e.target.value);\n            }}\n          >\n            {currencyList.map((option) => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CurrencyConverter;\n","import \"./App.css\";\nimport BMI from \"./Components/BMI/bmi\";\nimport Navbar from \"./Components/Navbar/navbar\";\nimport Calculator from \"./Components/Calculator/calculator\";\nimport Counter from \"./Components/Counter/counter\";\nimport Joke from \"./Components/JokeGenerator/joke\";\nimport CurrencyConverter from \"./Components/CurrencyConverter/currencyConverter\";\nimport { useState } from \"react\";\nimport React from \"react\";\n\nfunction App() {\n  const [menu, setMenu] = useState(1);\n\n  let setTool = (tool) => {\n    setMenu(tool);\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar setTool={setTool} menu={menu} />\n      <div className=\"display\">\n        {menu === 1 && <Calculator />}\n        {menu === 2 && <BMI />}\n        {menu === 3 && <Counter />}\n        {menu === 4 && <Joke />}\n        {menu === 5 && <CurrencyConverter />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}